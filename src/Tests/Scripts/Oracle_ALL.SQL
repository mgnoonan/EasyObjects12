
-- Create the Package if it hasn't been already
DECLARE n VARCHAR(256);
BEGIN
SELECT OBJECT_NAME INTO n FROM SYS.ALL_OBJECTS WHERE OBJECT_NAME = 'EASYOBJECTS' AND OWNER = 'MNOONA01';
EXCEPTION
WHEN NO_DATA_FOUND THEN
EXECUTE IMMEDIATE 'CREATE PACKAGE MNOONA01.EASYOBJECTS IS TYPE sqlcur IS REF CURSOR; END EASYOBJECTS;';
END;
/

CREATE OR REPLACE PROCEDURE "MNOONA01"."DAAB_GETAGGREGATETEST"
(
    cur_out OUT MNOONA01.EASYOBJECTS.sqlcur, 
	ID IN AGGREGATETEST.ID%type
)
IS
BEGIN
    OPEN cur_out FOR
	'SELECT
		ID,
		DEPARTMENTID,
		FIRSTNAME,
		LASTNAME,
		AGE,
		HIREDATE,
		SALARY,
		ISACTIVE,
		TS
	FROM AGGREGATETEST
	WHERE
		ID = :ID'
	USING ID;

END DAAB_GETAGGREGATETEST;
/


CREATE OR REPLACE PROCEDURE "MNOONA01"."DAAB_GETALLAGGREGATETEST"
(
    cur_out OUT MNOONA01.EASYOBJECTS.sqlcur
)
IS
BEGIN
    OPEN cur_out FOR
	SELECT
		ID,
		DEPARTMENTID,
		FIRSTNAME,
		LASTNAME,
		AGE,
		HIREDATE,
		SALARY,
		ISACTIVE,
		TS
	FROM AGGREGATETEST;

END DAAB_GETALLAGGREGATETEST;
/

CREATE OR REPLACE PROCEDURE "MNOONA01"."DAAB_UPDATEAGGREGATETEST"
(
	ID IN AGGREGATETEST.ID%type,
	DEPARTMENTID IN AGGREGATETEST.DEPARTMENTID%type,
	FIRSTNAME IN AGGREGATETEST.FIRSTNAME%type,
	LASTNAME IN AGGREGATETEST.LASTNAME%type,
	AGE IN AGGREGATETEST.AGE%type,
	HIREDATE IN AGGREGATETEST.HIREDATE%type,
	SALARY IN AGGREGATETEST.SALARY%type,
	ISACTIVE IN AGGREGATETEST.ISACTIVE%type,
	TS IN OUT AGGREGATETEST.TS%type
)
IS
BEGIN
	EXECUTE IMMEDIATE
	'UPDATE AGGREGATETEST
	SET
		ID= :ID,
		DEPARTMENTID= :DEPARTMENTID,
		FIRSTNAME= :FIRSTNAME,
		LASTNAME= :LASTNAME,
		AGE= :AGE,
		HIREDATE= :HIREDATE,
		SALARY= :SALARY,
		ISACTIVE= :ISACTIVE,
		TS = MNOONA01.AGGTESTROWID.NextVal
	WHERE
		ID = :ID
'
	USING ID, DEPARTMENTID, FIRSTNAME, LASTNAME, AGE, HIREDATE, SALARY, ISACTIVE, ID;

	SELECT MNOONA01.AGGTESTROWID.CurrVal INTO TS FROM DUAL;
	
	
END DAAB_UPDATEAGGREGATETEST;
/



CREATE OR REPLACE PROCEDURE "MNOONA01"."DAAB_ADDAGGREGATETEST"
(
	ID OUT AGGREGATETEST.ID%type,
	DEPARTMENTID IN AGGREGATETEST.DEPARTMENTID%type,
	FIRSTNAME IN AGGREGATETEST.FIRSTNAME%type,
	LASTNAME IN AGGREGATETEST.LASTNAME%type,
	AGE IN AGGREGATETEST.AGE%type,
	HIREDATE IN AGGREGATETEST.HIREDATE%type,
	SALARY IN AGGREGATETEST.SALARY%type,
	ISACTIVE IN AGGREGATETEST.ISACTIVE%type,
	TS IN AGGREGATETEST.TS%type
)
IS
BEGIN

	SELECT MNOONA01.AGGTESTID.NextVal INTO ID FROM DUAL;

	EXECUTE IMMEDIATE
	'INSERT
	INTO AGGREGATETEST
	(
		ID,
		DEPARTMENTID,
		FIRSTNAME,
		LASTNAME,
		AGE,
		HIREDATE,
		SALARY,
		ISACTIVE,
		TS
	)
	VALUES
	(
		:ID,
		:DEPARTMENTID,
		:FIRSTNAME,
		:LASTNAME,
		:AGE,
		:HIREDATE,
		:SALARY,
		:ISACTIVE,
		:TS)'
	USING ID, DEPARTMENTID, FIRSTNAME, LASTNAME, AGE, HIREDATE, SALARY, ISACTIVE, TS;

END DAAB_ADDAGGREGATETEST;
/

CREATE OR REPLACE PROCEDURE "MNOONA01"."DAAB_DELETEAGGREGATETEST"
(
	ID IN AGGREGATETEST.ID%type
)
IS
BEGIN

	EXECUTE IMMEDIATE
	'DELETE	FROM AGGREGATETEST
	WHERE
		ID = :ID'
	USING ID;

END DAAB_DELETEAGGREGATETEST;
/


